name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: event_booking_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run check
      
    - name: Apply database migrations
      run: npm run db:push
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/event_booking_test
        
    - name: Run API tests
      run: npm run test:api
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/event_booking_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        
    - name: Run integration tests
      run: npm run test:integration
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/event_booking_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        
    - name: Run performance tests
      run: npm run test:performance
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/event_booking_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    # Add deployment steps here when ready
